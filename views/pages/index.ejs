<!DOCTYPE html>
<html>

<head>
  <title>AR Product Viewer</title>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="/aframe/aframe.min.js"></script>
  <script src="/aframe-extras/aframe-extras.min.js"></script>
  <script>
    AFRAME.registerComponent('hide-in-ar-mode', {
      // Set this object invisible while in AR mode.
      init: function () {
        this.el.sceneEl.addEventListener('enter-vr', (ev) => {
          this.wasVisible = this.el.getAttribute('visible');
          if (this.el.sceneEl.is('ar-mode')) {
            this.el.setAttribute('visible', false);
          }
        });
        this.el.sceneEl.addEventListener('exit-vr', (ev) => {
          if (this.wasVisible) this.el.setAttribute('visible', true);
        });
      }
    });

		AFRAME.registerComponent('ar-hit-test', {
			init: function () {
				this.xrHitTestSource = null;
				this.viewerSpace = null;
				this.refSpace = null;

				this.el.sceneEl.renderer.xr.addEventListener('sessionend', (ev) => {
					this.viewerSpace = null;
					this.refSpace = null;
					this.xrHitTestSource = null;
				});
				this.el.sceneEl.renderer.xr.addEventListener('sessionstart', (ev) => {
					let session = this.el.sceneEl.renderer.xr.getSession();

					let element = this.el;
					session.addEventListener('select', function () {
						let position = element.getAttribute('position');

						document.getElementById('fold2').setAttribute('position', position);
						/*document.getElementById('light').setAttribute('position', {
							x: (position.x - 2),
							y: (position.y + 4),
							z: (position.z + 2)
						});*/
					});

					session.requestReferenceSpace('viewer').then((space) => {
						this.viewerSpace = space;
						session.requestHitTestSource({space: this.viewerSpace})
								.then((hitTestSource) => {
									this.xrHitTestSource = hitTestSource;
								});
					});

					session.requestReferenceSpace('local-floor').then((space) => {
						this.refSpace = space;
					});
				});
			},
			tick: function () {
				if (this.el.sceneEl.is('ar-mode')) {
					if (!this.viewerSpace) return;

					let frame = this.el.sceneEl.frame;
					let xrViewerPose = frame.getViewerPose(this.refSpace);

					if (this.xrHitTestSource && xrViewerPose) {
						let hitTestResults = frame.getHitTestResults(this.xrHitTestSource);
						if (hitTestResults.length > 0) {
							let pose = hitTestResults[0].getPose(this.refSpace);

							let inputMat = new THREE.Matrix4();
							inputMat.fromArray(pose.transform.matrix);

							let position = new THREE.Vector3();
							position.setFromMatrixPosition(inputMat);
							this.el.setAttribute('position', position);
						}
					}
				}
			}
		});
  </script>

</head>

<body>
  <a-scene webxr="requiredFeatures: hit-test,local-floor;">
    <a-assets>
      <a-asset-item id="fold2" src="/media/gltf/fold2/fold_2.gltf" response-type="arraybuffer"></a-asset-item>
      <img id="sky" src="/media/textures/milky-way-4k.png">
    </a-assets>

    <a-entity gltf-model="#fold2" animation-mixer></a-entity>
    <a-sky src="#sky" hide-in-ar-mode></a-sky>
    <a-camera position="0 .1 .3"></a-camera>
    <a-ring color="teal" radius-inner=".1" radius-outer=".11" rotation="-90 0 0" ar-hit-test></a-ring>
  </a-scene>
</body>

</html>